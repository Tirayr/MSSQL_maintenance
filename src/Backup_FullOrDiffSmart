--variable declaration
DECLARE 
	@ver nvarchar(128),
	@fullthreshold int=25,
	@Diffthreshold int=15,
	@changes numeric(5,2),
	@sql nvarchar(max),
	@sSQL nvarchar(max),
	@rval int,
	@ParmDefinition nvarchar(max),
	@dbname NVARCHAR(100), 
	@fPath NVARCHAR(256) ,
	@fName NVARCHAR(256) ,
	@Date VARCHAR(40) ,
	@value varchar(10)
 
--Checking the SQL Server versioni using serverproperty
 
SET @ver = CAST(serverproperty('ProductVersion') AS nvarchar)
SET @ver = SUBSTRING(@ver, 1, CHARINDEX('.', @ver) - 1)
SET @ParmDefinition = N'@retvalOUT int OUTPUT';

IF ( @ver = '14' )
BEGIN
	 -- backup directory
	SET @fpath = 'C:\MSSQL_Backups\'  
	-- filename format
	SELECT @Date = REPLACE(CONVERT(VARCHAR(30),GETDATE(),126),':','_')
	--Declare the cursor 
		DECLARE database_cursor CURSOR READ_ONLY FOR  
		SELECT name
		FROM master.sys.databases 
		WHERE name NOT IN ('master','model','msdb','tempdb') and state_Desc='ONLINE'
		OPEN database_cursor   
		FETCH NEXT FROM database_cursor INTO @dbname   
 
			WHILE @@FETCH_STATUS = 0   
			BEGIN   
    
				SET @fName = @fpath + @dbname + '_' + @date 
 
				--Calculate the pages that are modified since last full backup and assign it to a variable
				set @SQL='SELECT @retvalOUT=CAST(ROUND((SUM(modified_extent_page_count)*100.0)/SUM(allocated_extent_page_count),2) as decimal(10,2)) 
				from '+@dbname+'.sys.dm_db_file_space_usage'
				EXEC sp_executesql @SQL, @ParmDefinition, @retvalOUT=@rval OUTPUT;
 
				--Initiate FULL or differential backup based on the defined threshold values
 
				SET @sSQL= 'IF ('+ cast(@rval as varchar(10))+'>' +cast(@fullthreshold as varchar(10))+' OR '+ cast(@rval as varchar(10))+'=0 )
				BACKUP DATABASE '+@dbname +' TO DISK ='''+ @fName+'_full.bak''' +CHAR(13)
				+'ELSE'+CHAR(13)+'
				BEGIN
				IF ('+ cast(@rval as varchar(10))+'>' +cast(@Diffthreshold as varchar(10))+' AND ' +cast(@rval as varchar(10))+'<'+ cast(@fullthreshold as varchar(10)) +')'+char(13)
				+'BACKUP DATABASE '+@dbname +' TO DISK ='''+ @fName+'_Diff.bak'''+'  WITH DIFFERENTIAL'+CHAR(13)+
				'END'
 
				-- Print the SQL
				print @sSQL
				-- Execute the dynamic SQL
				EXEC sp_executesql @sSQL			
 
		FETCH NEXT FROM database_cursor INTO @dbname   
		END   
 
 
		CLOSE database_cursor   
		DEALLOCATE database_cursor
 
END

